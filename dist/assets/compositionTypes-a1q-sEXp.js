var b=Object.defineProperty;var U=(a,r,t)=>r in a?b(a,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[r]=t;var i=(a,r,t)=>(U(a,typeof r!="symbol"?r+"":r,t),t);import{R as J,S as s,T as x,U as y,V as z,W as A,X as V,u as v}from"./index-NHNacFVT.js";import{T as M}from"./timestamp_pb-DpX4yl5v.js";const e=class e extends J{constructor(t){super();i(this,"JWT","");i(this,"id","");s.util.initPartial(t,this)}static fromBinary(t,n){return new e().fromBinary(t,n)}static fromJson(t,n){return new e().fromJson(t,n)}static fromJsonString(t,n){return new e().fromJsonString(t,n)}static equals(t,n){return s.util.equals(e,t,n)}};i(e,"runtime",s),i(e,"typeName","compositiontypes.GetCompositionTypeRequest"),i(e,"fields",s.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let S=e;const o=class o extends J{constructor(t){super();i(this,"JWT","");i(this,"gameId","");i(this,"limit",x.zero);i(this,"offset",x.zero);s.util.initPartial(t,this)}static fromBinary(t,n){return new o().fromBinary(t,n)}static fromJson(t,n){return new o().fromJson(t,n)}static fromJsonString(t,n){return new o().fromJsonString(t,n)}static equals(t,n){return s.util.equals(o,t,n)}};i(o,"runtime",s),i(o,"typeName","compositiontypes.GetCompositionTypesRequest"),i(o,"fields",s.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"gameId",kind:"scalar",T:9},{no:3,name:"limit",kind:"scalar",T:3},{no:4,name:"offset",kind:"scalar",T:3}]));let B=o;const c=class c extends J{constructor(t){super();i(this,"compositionTypes",[]);i(this,"count",x.zero);s.util.initPartial(t,this)}static fromBinary(t,n){return new c().fromBinary(t,n)}static fromJson(t,n){return new c().fromJson(t,n)}static fromJsonString(t,n){return new c().fromJsonString(t,n)}static equals(t,n){return s.util.equals(c,t,n)}};i(c,"runtime",s),i(c,"typeName","compositiontypes.GetCompositionTypesReply"),i(c,"fields",s.util.newFieldList(()=>[{no:1,name:"compositionTypes",kind:"message",T:w,repeated:!0},{no:2,name:"count",kind:"scalar",T:3}]));let N=c;const m=class m extends J{constructor(t){super();i(this,"JWT","");i(this,"name","");i(this,"gameId","");s.util.initPartial(t,this)}static fromBinary(t,n){return new m().fromBinary(t,n)}static fromJson(t,n){return new m().fromJson(t,n)}static fromJsonString(t,n){return new m().fromJsonString(t,n)}static equals(t,n){return s.util.equals(m,t,n)}};i(m,"runtime",s),i(m,"typeName","compositiontypes.CreateCompositionTypeRequest"),i(m,"fields",s.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"gameId",kind:"scalar",T:9}]));let F=m;const u=class u extends J{constructor(t){super();i(this,"JWT","");i(this,"id","");i(this,"name","");s.util.initPartial(t,this)}static fromBinary(t,n){return new u().fromBinary(t,n)}static fromJson(t,n){return new u().fromJson(t,n)}static fromJsonString(t,n){return new u().fromJsonString(t,n)}static equals(t,n){return s.util.equals(u,t,n)}};i(u,"runtime",s),i(u,"typeName","compositiontypes.UpdateCompositionTypeRequest"),i(u,"fields",s.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9},{no:3,name:"name",kind:"scalar",T:9}]));let h=u;const l=class l extends J{constructor(t){super();i(this,"JWT","");i(this,"id","");s.util.initPartial(t,this)}static fromBinary(t,n){return new l().fromBinary(t,n)}static fromJson(t,n){return new l().fromJson(t,n)}static fromJsonString(t,n){return new l().fromJsonString(t,n)}static equals(t,n){return s.util.equals(l,t,n)}};i(l,"runtime",s),i(l,"typeName","compositiontypes.DeleteCompositionTypeRequest"),i(l,"fields",s.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let L=l;const d=class d extends J{constructor(t){super();i(this,"id","");i(this,"name","");i(this,"gameId","");i(this,"createdAt");s.util.initPartial(t,this)}static fromBinary(t,n){return new d().fromBinary(t,n)}static fromJson(t,n){return new d().fromJson(t,n)}static fromJsonString(t,n){return new d().fromJsonString(t,n)}static equals(t,n){return s.util.equals(d,t,n)}};i(d,"runtime",s),i(d,"typeName","compositiontypes.CompositionType"),i(d,"fields",s.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"gameId",kind:"scalar",T:9},{no:4,name:"createdAt",kind:"message",T:M}]));let w=d;const f=class f extends J{constructor(r){super(),s.util.initPartial(r,this)}static fromBinary(r,t){return new f().fromBinary(r,t)}static fromJson(r,t){return new f().fromJson(r,t)}static fromJsonString(r,t){return new f().fromJsonString(r,t)}static equals(r,t){return s.util.equals(f,r,t)}};i(f,"runtime",s),i(f,"typeName","compositiontypes.EmptyReply"),i(f,"fields",s.util.newFieldList(()=>[]));let I=f;const q={typeName:"compositiontypes.V1CompositionTypes",methods:{getCompositionTypes:{name:"GetCompositionTypes",I:B,O:N,kind:y.Unary},getCompositionType:{name:"GetCompositionType",I:S,O:w,kind:y.Unary},createCompositionType:{name:"CreateCompositionType",I:F,O:w,kind:y.Unary},updateCompositionType:{name:"UpdateCompositionType",I:h,O:I,kind:y.Unary},deleteCompositionType:{name:"DeleteCompositionType",I:L,O:I,kind:y.Unary}}},P=z(q,V),H=A("compositiontypes",()=>{const a=v();async function r(T){return new Promise(g=>{P.getCompositionType(new S({JWT:a.getToken(),id:T})).then(p=>{g([p,void 0])}).catch(p=>{console.log(p),g([void 0,"unable to get composition type"])})})}async function t(T,g,p){return new Promise(k=>{P.getCompositionTypes(new B({JWT:a.getToken(),gameId:T,limit:BigInt(g),offset:BigInt(p)})).then(W=>{const O=W;k([O.compositionTypes,O.compositionTypes.length,void 0])}).catch(W=>{console.log(W),k([void 0,0,"unable to get compositiontypes"])})})}async function n(T,g){return new Promise(p=>{P.updateCompositionType(new h({id:T,name:g,JWT:a.getToken()})).then(()=>{p(void 0)}).catch(k=>{console.log(k),p("unable to get composition type by id")})})}return{getCompositionTypes:t,getCompositionType:r,updateCompositionType:n}});export{H as u};
