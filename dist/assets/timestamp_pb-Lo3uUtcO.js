import{R as i,T as a,S as r}from"./index-J7TsvYTq.js";class s extends i{constructor(o){super(),this.seconds=a.zero,this.nanos=0,r.util.initPartial(o,this)}fromJson(o,e){if(typeof o!="string")throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${r.json.debug(o)}`);const t=o.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);if(!t)throw new Error("cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string");const n=Date.parse(t[1]+"-"+t[2]+"-"+t[3]+"T"+t[4]+":"+t[5]+":"+t[6]+(t[8]?t[8]:"Z"));if(Number.isNaN(n))throw new Error("cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string");if(n<Date.parse("0001-01-01T00:00:00Z")||n>Date.parse("9999-12-31T23:59:59Z"))throw new Error("cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive");return this.seconds=a.parse(n/1e3),this.nanos=0,t[7]&&(this.nanos=parseInt("1"+t[7]+"0".repeat(9-t[7].length))-1e9),this}toJson(o){const e=Number(this.seconds)*1e3;if(e<Date.parse("0001-01-01T00:00:00Z")||e>Date.parse("9999-12-31T23:59:59Z"))throw new Error("cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive");if(this.nanos<0)throw new Error("cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative");let t="Z";if(this.nanos>0){const n=(this.nanos+1e9).toString().substring(1);n.substring(3)==="000000"?t="."+n.substring(0,3)+"Z":n.substring(6)==="000"?t="."+n.substring(0,6)+"Z":t="."+n+"Z"}return new Date(e).toISOString().replace(".000Z",t)}toDate(){return new Date(Number(this.seconds)*1e3+Math.ceil(this.nanos/1e6))}static now(){return s.fromDate(new Date)}static fromDate(o){const e=o.getTime();return new s({seconds:a.parse(Math.floor(e/1e3)),nanos:e%1e3*1e6})}static fromBinary(o,e){return new s().fromBinary(o,e)}static fromJson(o,e){return new s().fromJson(o,e)}static fromJsonString(o,e){return new s().fromJsonString(o,e)}static equals(o,e){return r.util.equals(s,o,e)}}s.runtime=r;s.typeName="google.protobuf.Timestamp";s.fields=r.util.newFieldList(()=>[{no:1,name:"seconds",kind:"scalar",T:3},{no:2,name:"nanos",kind:"scalar",T:5}]);export{s as T};
