var W=Object.defineProperty;var x=(f,s,t)=>s in f?W(f,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):f[s]=t;var r=(f,s,t)=>(x(f,typeof s!="symbol"?s+"":s,t),t);import{M as d,N as i,O as N,P as J,Q as F,R as I,S as L,u as O}from"./index-YON7duyJ.js";import{T as A}from"./timestamp_pb-CBs1K3Pj.js";const a=class a extends d{constructor(t){super();r(this,"JWT","");r(this,"id","");r(this,"name","");i.util.initPartial(t,this)}static fromBinary(t,n){return new a().fromBinary(t,n)}static fromJson(t,n){return new a().fromJson(t,n)}static fromJsonString(t,n){return new a().fromJsonString(t,n)}static equals(t,n){return i.util.equals(a,t,n)}};r(a,"runtime",i),r(a,"typeName","games.UpdateGameRequest"),r(a,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9},{no:3,name:"name",kind:"scalar",T:9}]));let k=a;const e=class e extends d{constructor(t){super();r(this,"JWT","");r(this,"limit",N.zero);r(this,"offset",N.zero);i.util.initPartial(t,this)}static fromBinary(t,n){return new e().fromBinary(t,n)}static fromJson(t,n){return new e().fromJson(t,n)}static fromJsonString(t,n){return new e().fromJsonString(t,n)}static equals(t,n){return i.util.equals(e,t,n)}};r(e,"runtime",i),r(e,"typeName","games.GetGamesRequest"),r(e,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"limit",kind:"scalar",T:3},{no:3,name:"offset",kind:"scalar",T:3}]));let w=e;const o=class o extends d{constructor(t){super();r(this,"games",[]);i.util.initPartial(t,this)}static fromBinary(t,n){return new o().fromBinary(t,n)}static fromJson(t,n){return new o().fromJson(t,n)}static fromJsonString(t,n){return new o().fromJsonString(t,n)}static equals(t,n){return i.util.equals(o,t,n)}};r(o,"runtime",i),r(o,"typeName","games.GetGamesReply"),r(o,"fields",i.util.newFieldList(()=>[{no:1,name:"games",kind:"message",T:B,repeated:!0}]));let S=o;const m=class m extends d{constructor(t){super();r(this,"JWT","");r(this,"name","");i.util.initPartial(t,this)}static fromBinary(t,n){return new m().fromBinary(t,n)}static fromJson(t,n){return new m().fromJson(t,n)}static fromJsonString(t,n){return new m().fromJsonString(t,n)}static equals(t,n){return i.util.equals(m,t,n)}};r(m,"runtime",i),r(m,"typeName","games.CreateGameRequest"),r(m,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9}]));let y=m;const c=class c extends d{constructor(t){super();r(this,"JWT","");r(this,"id","");i.util.initPartial(t,this)}static fromBinary(t,n){return new c().fromBinary(t,n)}static fromJson(t,n){return new c().fromJson(t,n)}static fromJsonString(t,n){return new c().fromJsonString(t,n)}static equals(t,n){return i.util.equals(c,t,n)}};r(c,"runtime",i),r(c,"typeName","games.DeleteGameRequest"),r(c,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let p=c;const u=class u extends d{constructor(t){super();r(this,"id","");r(this,"name","");r(this,"createdAt");i.util.initPartial(t,this)}static fromBinary(t,n){return new u().fromBinary(t,n)}static fromJson(t,n){return new u().fromJson(t,n)}static fromJsonString(t,n){return new u().fromJsonString(t,n)}static equals(t,n){return i.util.equals(u,t,n)}};r(u,"runtime",i),r(u,"typeName","games.Game"),r(u,"fields",i.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"createdAt",kind:"message",T:A}]));let B=u;const l=class l extends d{constructor(s){super(),i.util.initPartial(s,this)}static fromBinary(s,t){return new l().fromBinary(s,t)}static fromJson(s,t){return new l().fromJson(s,t)}static fromJsonString(s,t){return new l().fromJsonString(s,t)}static equals(s,t){return i.util.equals(l,s,t)}};r(l,"runtime",i),r(l,"typeName","games.EmptyReply"),r(l,"fields",i.util.newFieldList(()=>[]));let g=l;const M={typeName:"games.V1Games",methods:{getGames:{name:"GetGames",I:w,O:S,kind:J.Unary},createGame:{name:"CreateGame",I:y,O:g,kind:J.Unary},deleteGame:{name:"DeleteGame",I:p,O:g,kind:J.Unary},updateGame:{name:"UpdateGame",I:k,O:g,kind:J.Unary}}},q=F(M,L),b=I("games",()=>{const f=O();async function s(t,n){return new Promise(h=>{q.getGames(new w({JWT:f.getToken(),limit:BigInt(t),offset:BigInt(n)})).then(T=>{const P=T;h([P.games,P.games.length,void 0])}).catch(T=>{console.log(T),h([void 0,0,"unable to get games"])})})}return{getGames:s}});export{b as u};
