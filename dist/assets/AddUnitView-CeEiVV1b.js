var ot=Object.defineProperty;var lt=(l,s,t)=>s in l?ot(l,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[s]=t;var n=(l,s,t)=>(lt(l,typeof s!="symbol"?s+"":s,t),t);import{M as I,O as J,N as a,P as x,Q as ct,R as mt,S as ut,u as X,f as dt,z as pt,A as yt,s as ft,r as O,B as Tt,g as gt,j as v,o as A,c as H,a as r,w as o,d as N,i as K,C as wt,h as Jt,y as Q,p as kt,q as Bt,b as Y,e as ht,E as It,D as St,x as Ut,H as bt,I as xt,J as Mt,K as vt,L as Nt,v as Pt,t as At}from"./index-BQqGihlM.js";/* empty css                   *//* empty css               *//* empty css                *//* empty css                 *//* empty css                  *//* empty css                     *//* empty css                           */import{U as F,D as Ft,u as Wt}from"./userArmies-DetI65OZ.js";import"./timestamp_pb-CTfFuloM.js";const u=class u extends I{constructor(t){super();n(this,"JWT","");n(this,"id","");n(this,"name","");n(this,"pointsPerModel",J.zero);n(this,"minModels",J.zero);n(this,"maxModels",J.zero);a.util.initPartial(t,this)}static fromBinary(t,e){return new u().fromBinary(t,e)}static fromJson(t,e){return new u().fromJson(t,e)}static fromJsonString(t,e){return new u().fromJsonString(t,e)}static equals(t,e){return a.util.equals(u,t,e)}};n(u,"runtime",a),n(u,"typeName","unittypes.UpdateUnitTypeRequest"),n(u,"fields",a.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9},{no:3,name:"name",kind:"scalar",T:9},{no:4,name:"pointsPerModel",kind:"scalar",T:3},{no:5,name:"minModels",kind:"scalar",T:3},{no:6,name:"maxModels",kind:"scalar",T:3}]));let V=u;const d=class d extends I{constructor(t){super();n(this,"JWT","");n(this,"armyTypeId","");a.util.initPartial(t,this)}static fromBinary(t,e){return new d().fromBinary(t,e)}static fromJson(t,e){return new d().fromJson(t,e)}static fromJsonString(t,e){return new d().fromJsonString(t,e)}static equals(t,e){return a.util.equals(d,t,e)}};n(d,"runtime",a),n(d,"typeName","unittypes.ArmyTypeIdRequest"),n(d,"fields",a.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"armyTypeId",kind:"scalar",T:9}]));let W=d;const p=class p extends I{constructor(t){super();n(this,"unitTypes",[]);a.util.initPartial(t,this)}static fromBinary(t,e){return new p().fromBinary(t,e)}static fromJson(t,e){return new p().fromJson(t,e)}static fromJsonString(t,e){return new p().fromJsonString(t,e)}static equals(t,e){return a.util.equals(p,t,e)}};n(p,"runtime",a),n(p,"typeName","unittypes.ArmyTypeIdReply"),n(p,"fields",a.util.newFieldList(()=>[{no:1,name:"unitTypes",kind:"message",T:F,repeated:!0}]));let $=p;const y=class y extends I{constructor(t){super();n(this,"JWT","");n(this,"id","");a.util.initPartial(t,this)}static fromBinary(t,e){return new y().fromBinary(t,e)}static fromJson(t,e){return new y().fromJson(t,e)}static fromJsonString(t,e){return new y().fromJsonString(t,e)}static equals(t,e){return a.util.equals(y,t,e)}};n(y,"runtime",a),n(y,"typeName","unittypes.GetUnitTypeRequest"),n(y,"fields",a.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let C=y;const f=class f extends I{constructor(t){super();n(this,"JWT","");n(this,"armyTypeId","");n(this,"limit",J.zero);n(this,"offset",J.zero);n(this,"includeUnitTypeOptions",!1);a.util.initPartial(t,this)}static fromBinary(t,e){return new f().fromBinary(t,e)}static fromJson(t,e){return new f().fromJson(t,e)}static fromJsonString(t,e){return new f().fromJsonString(t,e)}static equals(t,e){return a.util.equals(f,t,e)}};n(f,"runtime",a),n(f,"typeName","unittypes.GetUnitTypesRequest"),n(f,"fields",a.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"armyTypeId",kind:"scalar",T:9},{no:3,name:"limit",kind:"scalar",T:3},{no:4,name:"offset",kind:"scalar",T:3},{no:5,name:"includeUnitTypeOptions",kind:"scalar",T:8}]));let L=f;const T=class T extends I{constructor(t){super();n(this,"unitTypes",[]);n(this,"count",J.zero);a.util.initPartial(t,this)}static fromBinary(t,e){return new T().fromBinary(t,e)}static fromJson(t,e){return new T().fromJson(t,e)}static fromJsonString(t,e){return new T().fromJsonString(t,e)}static equals(t,e){return a.util.equals(T,t,e)}};n(T,"runtime",a),n(T,"typeName","unittypes.GetUnitTypesReply"),n(T,"fields",a.util.newFieldList(()=>[{no:1,name:"unitTypes",kind:"message",T:F,repeated:!0},{no:2,name:"count",kind:"scalar",T:3}]));let q=T;const g=class g extends I{constructor(t){super();n(this,"JWT","");n(this,"name","");n(this,"gameId","");n(this,"armyTypeId","");n(this,"troopTypeId","");n(this,"compositionTypeId","");n(this,"pointsPerModel",J.zero);n(this,"minModels",J.zero);n(this,"maxModels",J.zero);n(this,"unitTypeId","");a.util.initPartial(t,this)}static fromBinary(t,e){return new g().fromBinary(t,e)}static fromJson(t,e){return new g().fromJson(t,e)}static fromJsonString(t,e){return new g().fromJsonString(t,e)}static equals(t,e){return a.util.equals(g,t,e)}};n(g,"runtime",a),n(g,"typeName","unittypes.CreateUnitTypeRequest"),n(g,"fields",a.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"gameId",kind:"scalar",T:9},{no:4,name:"armyTypeId",kind:"scalar",T:9},{no:5,name:"troopTypeId",kind:"scalar",T:9},{no:6,name:"compositionTypeId",kind:"scalar",T:9},{no:7,name:"pointsPerModel",kind:"scalar",T:3},{no:8,name:"minModels",kind:"scalar",T:3},{no:9,name:"maxModels",kind:"scalar",T:3},{no:10,name:"unitTypeId",kind:"scalar",T:9}]));let _=g;const w=class w extends I{constructor(s){super(),a.util.initPartial(s,this)}static fromBinary(s,t){return new w().fromBinary(s,t)}static fromJson(s,t){return new w().fromJson(s,t)}static fromJsonString(s,t){return new w().fromJsonString(s,t)}static equals(s,t){return a.util.equals(w,s,t)}};n(w,"runtime",a),n(w,"typeName","unittypes.EmptyReply"),n(w,"fields",a.util.newFieldList(()=>[]));let z=w;const Lt={typeName:"unittypes.V1UnitTypes",methods:{getUnitTypes:{name:"GetUnitTypes",I:L,O:q,kind:x.Unary},getUnitType:{name:"GetUnitType",I:C,O:F,kind:x.Unary},createUnitType:{name:"CreateUnitType",I:_,O:F,kind:x.Unary},updateUnitType:{name:"UpdateUnitType",I:V,O:z,kind:x.Unary},deleteUnitType:{name:"DeleteUnitType",I:Ft,O:z,kind:x.Unary},getBasicUnitTypesByArmyTypeID:{name:"GetBasicUnitTypesByArmyTypeID",I:W,O:$,kind:x.Unary}}},D=ct(Lt,ut),_t=mt("unitTypes",()=>{const l=X();async function s(k,m,i){return console.log("attempting to get unit types"),new Promise(B=>{D.getUnitTypes(new L({armyTypeId:k,limit:BigInt(m),offset:BigInt(i>1?(i-1)*m:0),JWT:l.getToken()})).then(b=>{const M=b;B([M.unitTypes,Number(M.count),void 0])}).catch(b=>{console.table(b),B([void 0,0,"unable to get unit games"])})})}async function t(k,m){return new Promise(i=>{D.createUnitType(new _({armyTypeId:k,name:m,JWT:l.getToken()})).then(()=>{i(void 0)}).catch(B=>{console.table(B),i("unable to create a new unit type")})})}async function e(k){return new Promise(m=>{D.getBasicUnitTypesByArmyTypeID(new W({armyTypeId:k,JWT:l.getToken()})).then(i=>m([i.unitTypes,void 0])).catch(i=>{console.table(i),m([void 0,"unable to get unit type names by army type id"])})})}return{getUnitTypes:s,createUnitType:t,getUnitTypeNamesFromArmyTypeId:e}}),zt={class:"user-armies-add-unit"},Et=Y("br",null,null,-1),Ot=Y("br",null,null,-1),Zt=dt({__name:"AddUnitView",setup(l){const s=pt(),t=X(),e=_t(),k=Wt(),m=yt(),{loading:i}=ft(t),B=O([]),b=O(""),M=O(""),P=Tt({unit_type_id:""});async function Z(){v.info("Attempting to add a unit to an army..."),i.value=!0;const S=await k.addUnitToUserArmy(s.params.id,P.unit_type_id);if(i.value=!1,S){v.error(S);return}v.success("Successfully added unit to army"),m.push({path:`/user-armies/edit/${s.params.id}`})}async function G(){const[S,h]=await e.getUnitTypeNamesFromArmyTypeId(M.value);if(h){v.error(h);return}B.value=S}return gt(async()=>{const[S,h]=await k.getUserArmy(s.params.id);if(h){v.error(h);return}const U=S;b.value=U.name,M.value=U.armyTypeId,await G()}),(S,h)=>{const U=ht,R=It,E=St,tt=At,et=Ut,j=bt,nt=xt,at=Mt,st=vt,rt=Nt,it=Pt;return A(),H("div",zt,[r(R,{separator:"/"},{default:o(()=>[r(U,{to:{path:"/"}},{default:o(()=>[N("Homepage")]),_:1}),r(U,{to:{path:"/user-armies"}},{default:o(()=>[N("User Armies")]),_:1}),r(U,{to:{path:`/user-armies/edit/${K(s).params.id}`}},{default:o(()=>[N(wt(b.value),1)]),_:1},8,["to"]),r(U,null,{default:o(()=>[N("Add Unit")]),_:1})]),_:1}),Et,Ot,r(rt,{class:"row-bg",justify:"space-between"},{default:o(()=>[r(E,{span:4}),r(E,{span:10},{default:o(()=>[r(st,null,{default:o(()=>[Jt((A(),Q(at,{model:P,"label-width":"auto",style:{"max-height":"600px"}},{default:o(()=>[r(j,{label:"Unit Type"},{default:o(()=>[r(et,{modelValue:P.unit_type_id,"onUpdate:modelValue":h[0]||(h[0]=c=>P.unit_type_id=c),placeholder:"please select your unit type"},{default:o(()=>[(A(!0),H(kt,null,Bt(B.value,c=>(A(),Q(tt,{key:c.id,label:`${c.compositionTypeName} - ${c.name} - (${c.pointsPerModel*c.minModels}pts${c.maxModels>1?" per model (min:"+c.minModels+")":""})`,value:c.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),r(j,null,{default:o(()=>[r(nt,{type:"primary",onClick:Z},{default:o(()=>[N("Add")]),_:1})]),_:1})]),_:1},8,["model"])),[[it,K(i)]])]),_:1})]),_:1}),r(E,{span:4})]),_:1})])}}});export{Zt as default};
