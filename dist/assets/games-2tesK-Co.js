var F=Object.defineProperty;var I=(f,a,t)=>a in f?F(f,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):f[a]=t;var r=(f,a,t)=>(I(f,typeof a!="symbol"?a+"":a,t),t);import{O as d,P as i,Q as x,R as T,S as L,T as O,U as A,u as U}from"./index-BPptFwra.js";import{T as b}from"./timestamp_pb-YH_wUWDP.js";const s=class s extends d{constructor(t){super();r(this,"JWT","");r(this,"id","");r(this,"name","");i.util.initPartial(t,this)}static fromBinary(t,n){return new s().fromBinary(t,n)}static fromJson(t,n){return new s().fromJson(t,n)}static fromJsonString(t,n){return new s().fromJsonString(t,n)}static equals(t,n){return i.util.equals(s,t,n)}};r(s,"runtime",i),r(s,"typeName","games.UpdateGameRequest"),r(s,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9},{no:3,name:"name",kind:"scalar",T:9}]));let p=s;const e=class e extends d{constructor(t){super();r(this,"JWT","");r(this,"limit",x.zero);r(this,"offset",x.zero);i.util.initPartial(t,this)}static fromBinary(t,n){return new e().fromBinary(t,n)}static fromJson(t,n){return new e().fromJson(t,n)}static fromJsonString(t,n){return new e().fromJsonString(t,n)}static equals(t,n){return i.util.equals(e,t,n)}};r(e,"runtime",i),r(e,"typeName","games.GetGamesRequest"),r(e,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"limit",kind:"scalar",T:3},{no:3,name:"offset",kind:"scalar",T:3}]));let k=e;const o=class o extends d{constructor(t){super();r(this,"games",[]);i.util.initPartial(t,this)}static fromBinary(t,n){return new o().fromBinary(t,n)}static fromJson(t,n){return new o().fromJson(t,n)}static fromJsonString(t,n){return new o().fromJsonString(t,n)}static equals(t,n){return i.util.equals(o,t,n)}};r(o,"runtime",i),r(o,"typeName","games.GetGamesReply"),r(o,"fields",i.util.newFieldList(()=>[{no:1,name:"games",kind:"message",T:P,repeated:!0}]));let B=o;const c=class c extends d{constructor(t){super();r(this,"JWT","");r(this,"name","");i.util.initPartial(t,this)}static fromBinary(t,n){return new c().fromBinary(t,n)}static fromJson(t,n){return new c().fromJson(t,n)}static fromJsonString(t,n){return new c().fromJsonString(t,n)}static equals(t,n){return i.util.equals(c,t,n)}};r(c,"runtime",i),r(c,"typeName","games.CreateGameRequest"),r(c,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9}]));let y=c;const m=class m extends d{constructor(t){super();r(this,"JWT","");r(this,"id","");i.util.initPartial(t,this)}static fromBinary(t,n){return new m().fromBinary(t,n)}static fromJson(t,n){return new m().fromJson(t,n)}static fromJsonString(t,n){return new m().fromJsonString(t,n)}static equals(t,n){return i.util.equals(m,t,n)}};r(m,"runtime",i),r(m,"typeName","games.DeleteGameRequest"),r(m,"fields",i.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let h=m;const u=class u extends d{constructor(t){super();r(this,"id","");r(this,"name","");r(this,"createdAt");i.util.initPartial(t,this)}static fromBinary(t,n){return new u().fromBinary(t,n)}static fromJson(t,n){return new u().fromJson(t,n)}static fromJsonString(t,n){return new u().fromJsonString(t,n)}static equals(t,n){return i.util.equals(u,t,n)}};r(u,"runtime",i),r(u,"typeName","games.Game"),r(u,"fields",i.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"name",kind:"scalar",T:9},{no:3,name:"createdAt",kind:"message",T:b}]));let P=u;const l=class l extends d{constructor(a){super(),i.util.initPartial(a,this)}static fromBinary(a,t){return new l().fromBinary(a,t)}static fromJson(a,t){return new l().fromJson(a,t)}static fromJsonString(a,t){return new l().fromJsonString(a,t)}static equals(a,t){return i.util.equals(l,a,t)}};r(l,"runtime",i),r(l,"typeName","games.EmptyReply"),r(l,"fields",i.util.newFieldList(()=>[]));let g=l;const q={typeName:"games.V1Games",methods:{getGames:{name:"GetGames",I:k,O:B,kind:T.Unary},createGame:{name:"CreateGame",I:y,O:g,kind:T.Unary},deleteGame:{name:"DeleteGame",I:h,O:g,kind:T.Unary},updateGame:{name:"UpdateGame",I:p,O:g,kind:T.Unary}}},N=L(q,A),v=O("games",()=>{const f=U();async function a(n,J){return new Promise(w=>{N.getGames(new k({JWT:f.getToken(),limit:BigInt(n),offset:BigInt(J)})).then(S=>{const W=S;w([W.games,W.games.length,void 0])}).catch(S=>{console.log(S),w([void 0,0,"unable to get games"])})})}async function t(n){return new Promise(J=>{N.createGame(new y({JWT:f.getToken(),name:n})).then(()=>J(void 0)).catch(w=>{console.log(w),J("unable to create a new game")})})}return{getGames:a,createGame:t}});export{v as u};
