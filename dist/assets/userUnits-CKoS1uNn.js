var B=Object.defineProperty;var P=(l,e,t)=>e in l?B(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var s=(l,e,t)=>(P(l,typeof e!="symbol"?e+"":e,t),t);import{M as d,N as r,O as p,P as q,Q as x,R as N,S as F,u as L}from"./index-CuHrO1UT.js";import{A as W}from"./userArmies-D3pO84eT.js";const i=class i extends d{constructor(t){super();s(this,"JWT","");s(this,"id","");r.util.initPartial(t,this)}static fromBinary(t,n){return new i().fromBinary(t,n)}static fromJson(t,n){return new i().fromJson(t,n)}static fromJsonString(t,n){return new i().fromJsonString(t,n)}static equals(t,n){return r.util.equals(i,t,n)}};s(i,"runtime",r),s(i,"typeName","userarmies.GetUnitRequest"),s(i,"fields",r.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"id",kind:"scalar",T:9}]));let w=i;const a=class a extends d{constructor(t){super();s(this,"unit");r.util.initPartial(t,this)}static fromBinary(t,n){return new a().fromBinary(t,n)}static fromJson(t,n){return new a().fromJson(t,n)}static fromJsonString(t,n){return new a().fromJsonString(t,n)}static equals(t,n){return r.util.equals(a,t,n)}};s(a,"runtime",r),s(a,"typeName","userarmies.GetUnitReply"),s(a,"fields",r.util.newFieldList(()=>[{no:1,name:"unit",kind:"message",T:W}]));let g=a;const o=class o extends d{constructor(t){super();s(this,"id","");s(this,"isSelected",!1);s(this,"indexSelected","");s(this,"idsSelected",[]);s(this,"qtySelected",p.zero);r.util.initPartial(t,this)}static fromBinary(t,n){return new o().fromBinary(t,n)}static fromJson(t,n){return new o().fromJson(t,n)}static fromJsonString(t,n){return new o().fromJsonString(t,n)}static equals(t,n){return r.util.equals(o,t,n)}};s(o,"runtime",r),s(o,"typeName","userarmies.UpdateUserArmyUnitOptionValue"),s(o,"fields",r.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"is_selected",kind:"scalar",T:8},{no:3,name:"index_selected",kind:"scalar",T:9},{no:4,name:"ids_selected",kind:"scalar",T:9,repeated:!0},{no:5,name:"qty_selected",kind:"scalar",T:3}]));let y=o;const u=class u extends d{constructor(t){super();s(this,"id","");s(this,"qty",{case:void 0});s(this,"optionValues",[]);s(this,"points",p.zero);r.util.initPartial(t,this)}static fromBinary(t,n){return new u().fromBinary(t,n)}static fromJson(t,n){return new u().fromJson(t,n)}static fromJsonString(t,n){return new u().fromJsonString(t,n)}static equals(t,n){return r.util.equals(u,t,n)}};s(u,"runtime",r),s(u,"typeName","userarmies.UpdateUserArmyUnit"),s(u,"fields",r.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"qty_null",kind:"scalar",T:8,oneof:"qty"},{no:3,name:"qty_value",kind:"scalar",T:3,oneof:"qty"},{no:4,name:"option_values",kind:"message",T:y,repeated:!0},{no:5,name:"points",kind:"scalar",T:3}]));let T=u;const c=class c extends d{constructor(t){super();s(this,"JWT","");s(this,"updateArmyUnit");r.util.initPartial(t,this)}static fromBinary(t,n){return new c().fromBinary(t,n)}static fromJson(t,n){return new c().fromJson(t,n)}static fromJsonString(t,n){return new c().fromJsonString(t,n)}static equals(t,n){return r.util.equals(c,t,n)}};s(c,"runtime",r),s(c,"typeName","userarmies.UpdateUnitRequest"),s(c,"fields",r.util.newFieldList(()=>[{no:1,name:"JWT",kind:"scalar",T:9},{no:2,name:"update_army_unit",kind:"message",T}]));let S=c;const m=class m extends d{constructor(e){super(),r.util.initPartial(e,this)}static fromBinary(e,t){return new m().fromBinary(e,t)}static fromJson(e,t){return new m().fromJson(e,t)}static fromJsonString(e,t){return new m().fromJsonString(e,t)}static equals(e,t){return r.util.equals(m,e,t)}};s(m,"runtime",r),s(m,"typeName","userarmies.UpdateUnitReply"),s(m,"fields",r.util.newFieldList(()=>[]));let k=m;const v={typeName:"userarmies.V1UserArmyUnits",methods:{getUnit:{name:"GetUnit",I:w,O:g,kind:q.Unary},updateUnit:{name:"UpdateUnit",I:S,O:k,kind:q.Unary}}},h=x(v,F),C=N("userUnits",()=>{const l=L();async function e(n){return new Promise(f=>{h.getUnit(new w({JWT:l.getToken(),id:n})).then(J=>{f([J.unit,void 0])}).catch(J=>{console.log(J),f([void 0,"unable to get user army unit"])})})}async function t(n){return new Promise(f=>{n.JWT=l.getToken(),h.updateUnit(n).then(()=>f(void 0)).catch(J=>{console.log(J),f("unable to update user unit")})})}return{getUnit:e,updateUnit:t}});export{T as U,S as a,C as u};
