// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file proto/compositiontypes/composition-types.proto (package compositiontypes, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CompositionType, CreateCompositionTypeRequest, DeleteCompositionTypeRequest, EmptyReply, GetCompositionTypeRequest, GetCompositionTypesReply, GetCompositionTypesRequest, UpdateCompositionTypeRequest } from "./composition-types_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service compositiontypes.V1CompositionTypes
 */
export const V1CompositionTypes = {
  typeName: "compositiontypes.V1CompositionTypes",
  methods: {
    /**
     * @generated from rpc compositiontypes.V1CompositionTypes.GetCompositionTypes
     */
    getCompositionTypes: {
      name: "GetCompositionTypes",
      I: GetCompositionTypesRequest,
      O: GetCompositionTypesReply,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc compositiontypes.V1CompositionTypes.GetCompositionType
     */
    getCompositionType: {
      name: "GetCompositionType",
      I: GetCompositionTypeRequest,
      O: CompositionType,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc compositiontypes.V1CompositionTypes.CreateCompositionType
     */
    createCompositionType: {
      name: "CreateCompositionType",
      I: CreateCompositionTypeRequest,
      O: CompositionType,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc compositiontypes.V1CompositionTypes.UpdateCompositionType
     */
    updateCompositionType: {
      name: "UpdateCompositionType",
      I: UpdateCompositionTypeRequest,
      O: EmptyReply,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc compositiontypes.V1CompositionTypes.DeleteCompositionType
     */
    deleteCompositionType: {
      name: "DeleteCompositionType",
      I: DeleteCompositionTypeRequest,
      O: EmptyReply,
      kind: MethodKind.Unary,
    },
  }
} as const;

